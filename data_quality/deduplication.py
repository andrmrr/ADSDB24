# -*- coding: utf-8 -*-
"""Deduplication.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HvvFl6JyEItngL4dCXneaCYevfx_Md2Q
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import duckdb

import datetime
import os
import json

base_dir = "/content/drive/MyDrive/ADSDB24"

"""DuckDB"""
duckdb_folder = "duckdb_database"
duckdb_formatted = os.path.join(duckdb_folder, "formatted_zone.db")
duckdb_trusted = os.path.join(duckdb_folder, "trusted_zone.db")
duckdb_exploitation = os.path.join(duckdb_folder, "exploitation_zone.db")

"""Metadata"""
metadata_folder = "metadata"
formatted_metadata = "formatted_metadata.json"
alz_metadata_fname = "alzheimer_metadata.json"
chr_metadata_fname = "chronic_disease_indicators_metadata.json"
alz_metadata_path = os.path.join(base_dir, metadata_folder, alz_metadata_fname)

# custom JSON encoder used for persisting metadata as a JSON file
class NpEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, np.integer):
            return int(obj)
        if isinstance(obj, np.floating):
            return float(obj)
        if isinstance(obj, np.ndarray):
            return obj.tolist()
        return super(NpEncoder, self).default(obj)

con = duckdb.connect(os.path.join(base_dir, duckdb_formatted))
tables = con.execute("SHOW TABLES").fetchall()
ret_str = "Tables in the formatted database:\n"
for table in tables:
    print(table[0])
con.close()

con = duckdb.connect(os.path.join(base_dir, duckdb_formatted))
alz = con.execute(f"SELECT * FROM alz_texas_2017_2024_10_31_19_44_38").fetchdf()

print(alz.columns)
alz_modified = alz.copy()

print(alz_modified.shape[0])
alz_modified.drop_duplicates(inplace=True)
print(alz_modified.shape[0])