"""ExploitationZone"""

import duckdb
import pandas as pd
import os
import numpy as np
import re

from util import *

def filter_topics(table_name, con_tru, con_exp):
  print(f"SELECT * FROM {table_name}")
  table = con_tru.execute(f"SELECT * FROM {table_name}").fetchdf()
  topics = table["Topic"].unique()

  con_exp.register("temp_table", table)

  for topic in topics:
    # Create name for new table
    topic_table_name = table_name + "_" + topic.lower().replace(" ", "_")
    topic_table_name = re.sub(r'[^a-zA-Z0-9_]', '',topic_table_name)

    # 'alzheimer' table filtered for rows according to val
    command = f"""
        CREATE TABLE {topic_table_name} AS
        SELECT *
        FROM temp_table
        WHERE temp_table.Topic = '{topic}'
    """
    # print(command)
    con_exp.execute(command)
    print(f"Created table {topic_table_name} in exploitation zone.")

"""Main for Exploitation Zone"""
def load_to_exploitation():
    con_tru = duckdb.connect(os.path.join(base_dir, duckdb_trusted))
    con_exp = duckdb.connect(os.path.join(base_dir, duckdb_exploitation))

    # Empty the database first
    tables = con_exp.execute("SHOW TABLES").fetchall()
    tables = [table[0] for table in tables]
    for table in tables:
        con_exp.execute(f"DROP TABLE {table}")

    # Filter topics
    for table_fname, table_name in dataset_names.items():
        filter_topics(table_name, con_tru, con_exp)

    con_tru.close()
    con_exp.close()